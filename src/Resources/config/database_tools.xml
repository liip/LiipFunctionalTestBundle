<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="liip_functional_test.services.fixtures_loader_factory" class="Liip\FunctionalTestBundle\Services\FixturesLoaderFactory" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="doctrine.fixtures.loader" />
        </service>

        <service id="liip_functional_test.services_database_backup.sqlite" class="Liip\FunctionalTestBundle\Services\DatabaseBackup\SqliteDatabaseBackup" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>

        <service id="liip_functional_test.services_database_backup.mysql" class="Liip\FunctionalTestBundle\Services\DatabaseBackup\MysqlDatabaseBackup" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>

        <service id="liip_functional_test.services_database_backup.mongodb" class="Liip\FunctionalTestBundle\Services\DatabaseBackup\MongodbDatabaseBackup" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>

        <service id="liip_functional_test.services_database_tools.orm_database_tool" class="Liip\FunctionalTestBundle\Services\DatabaseTools\ORMDatabaseTool" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>
        <service id="liip_functional_test.services_database_tools.orm_sqlite_database_tool" class="Liip\FunctionalTestBundle\Services\DatabaseTools\ORMSqliteDatabaseTool" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>
        <service id="liip_functional_test.services_database_tools.mongodb_database_tool" class="Liip\FunctionalTestBundle\Services\DatabaseTools\MongoDBDatabaseTool" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>
        <service id="liip_functional_test.services_database_tools.phpcr_database_tool" class="Liip\FunctionalTestBundle\Services\DatabaseTools\PHPCRDatabaseTool" public="false">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
        </service>
        <service id="liip_functional_test.services.database_tool_collection" class="Liip\FunctionalTestBundle\Services\DatabaseToolCollection" public="true">
            <argument type="service" id="service_container" />
            <argument type="service" id="liip_functional_test.services.fixtures_loader_factory" />
            <call method="add">
                <argument type="service" id="liip_functional_test.services_database_tools.orm_database_tool" />
            </call>
            <call method="add">
                <argument type="service" id="liip_functional_test.services_database_tools.orm_sqlite_database_tool" />
            </call>
            <call method="add">
                <argument type="service" id="liip_functional_test.services_database_tools.mongodb_database_tool" />
            </call>
            <call method="add">
                <argument type="service" id="liip_functional_test.services_database_tools.phpcr_database_tool" />
            </call>
        </service>
    </services>
</container>
